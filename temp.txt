multiple images, files in description,
search functionality,
blog deletion on category deletion, super author,
subscription plan on model, test cases using pytest,

draft and publish field in blog.


authentication, authorisation,
permission:
    edit, 
    model level permission,
    object level permission,




------------ done 3 may ---------


    form save overwrite for blog's author,
    custom login, logout views
    verification mail to user,
    blog update view,
    blog model update for last edited,
    overwrite the user manager so it doesn't ask for username,



------------- done 4 may ------------

    mail being sent from signal for each login of user

    done: create a categories model
    issue: have to use set() on the category field to set categories, 
        instead of automatically saving on the model through form.

    done: add the description editor from tinymce

    done: make the repo

    done: extend the abstractbaseuser

    testing upstream setting on repo


------------- 5 may -----------
todo:
    
    done: revert mail thorugh ModelAdmin

    done: category filter on model

    done: search blogs on title


------------- 6 may ---------------

    done: author for blog now being set through __init__ of form, 
            no longer overriding save() of form class, so longer have to 
            save the blog object twice for m2m field
    done: optimise category wise blog fetching query in the queryset class

    done: delete view for blogs

    done: added delete filter to blogs to see blgos requested for deletion




------------- 9 may -------------------

    mail on deletion request

    slug field in url for detail view

    slug field for category field

    category create, delete view



------------- 10 may ------------------

    not now: blog deletion on category deletion

    done: blog image

    files, images in description

    done: detail view for blogs

    tinymce and other plugin,

    permissions: types of permissions, signal permissions, 
    
    tinymce

    media directory



--------------- 16th may --------------

    read the docs tinyMCE

    add the js plugin code to base template

    update settings for tinymce

    override form wdget for the admin panel form of blogs

    create the reader and author groups in admin panel

    auto add reader group to user upon signup

    added the login_required and allowed_user decorator to the blog create view



------------ 17th may ---------------

    url plugin to the tinymce editor




--------------- 19th May ----------

    add "can view blog" perm to reader group

    add custom permission "can add new blog" blog model

    add "view_blog" to blog_list and blog_create view required permissions,
    add "can add new blog" to blog_create view required permissions,


    
    OBJECT LEVEL PERMISSIONS

    add custom admin interface to blog in admin.py subclassing GuardedModelAdmin
    
    add some permissions to a certain user 
    
    in the views.py blog_list(), for the queryset, use get_objects_for_user(user, permission, model) method to get the queryset, instead of the objects.all() methods
        now, you have restricted the blog_list() page to display only those blogs to users for which they have certain permissions. These permissions are defined on the individual blog level.


    add "blog.change_blog" permission required to update_blog view, and add the change_blog permission to author user at an object level.


------------

    